##################################################
# file: PdbWebServiceService_types.py
#
# schema types generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#    /home/chimera/chimeraBuild_OSMESA/build/build/bin/wsdl2py pdbws.wsdl
#
##################################################

import ZSI
import ZSI.TCcompound
from ZSI.schema import LocalElementDeclaration, ElementDeclaration, TypeDefinition, GTD, GED

##############################
# targetNamespace
# webservices.pdb.org
##############################

class ns0:
    targetNamespace = "webservices.pdb.org"

    class ArrayOf_xsd_int_Def(ZSI.TC.Array, TypeDefinition):
        #complexType/complexContent base="SOAP-ENC:Array"
        schema = "webservices.pdb.org"
        type = (schema, "ArrayOf_xsd_int")
        def __init__(self, pname, ofwhat=(), extend=False, restrict=False, attributes=None, **kw):
            ofwhat = ZSI.TCnumbers.Iint(None, typed=False)
            atype = (u'http://www.w3.org/2001/XMLSchema', u'int[]')
            ZSI.TCcompound.Array.__init__(self, atype, ofwhat, pname=pname, childnames='item', **kw)

    class AtomCoords_Def(ZSI.TCcompound.ComplexType, TypeDefinition):
        schema = "webservices.pdb.org"
        type = (schema, "AtomCoords")
        def __init__(self, pname, ofwhat=(), attributes=None, extend=False, restrict=False, **kw):
            ns = ns0.AtomCoords_Def.schema
            TClist = [GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="adp_type", aname="_adp_type", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B11", aname="_aniso_B11", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B11_esd", aname="_aniso_B11_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B12", aname="_aniso_B12", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B12_esd", aname="_aniso_B12_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B13", aname="_aniso_B13", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B13_esd", aname="_aniso_B13_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B22", aname="_aniso_B22", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B22_esd", aname="_aniso_B22_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B23", aname="_aniso_B23", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B23_esd", aname="_aniso_B23_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B33", aname="_aniso_B33", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_B33_esd", aname="_aniso_B33_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U11", aname="_aniso_U11", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U11_esd", aname="_aniso_U11_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U12", aname="_aniso_U12", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U12_esd", aname="_aniso_U12_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U13", aname="_aniso_U13", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U13_esd", aname="_aniso_U13_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U22", aname="_aniso_U22", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U22_esd", aname="_aniso_U22_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U23", aname="_aniso_U23", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U23_esd", aname="_aniso_U23_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U33", aname="_aniso_U33", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_U33_esd", aname="_aniso_U33_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="aniso_ratio", aname="_aniso_ratio", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","int",lazy=False)(pname="attached_hydrogens", aname="_attached_hydrogens", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="auth_asym_id", aname="_auth_asym_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="auth_atom_id", aname="_auth_atom_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="auth_comp_id", aname="_auth_comp_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="auth_seq_id", aname="_auth_seq_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="b_equiv_geom_mean", aname="_b_equiv_geom_mean", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="b_equiv_geom_mean_esd", aname="_b_equiv_geom_mean_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="b_iso_or_equiv", aname="_b_iso_or_equiv", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="b_iso_or_equiv_esd", aname="_b_iso_or_equiv_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="calc_attached_atom", aname="_calc_attached_atom", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="calc_flag", aname="_calc_flag", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="cartn_x", aname="_cartn_x", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="cartn_x_esd", aname="_cartn_x_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="cartn_y", aname="_cartn_y", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="cartn_y_esd", aname="_cartn_y_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="cartn_z", aname="_cartn_z", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="cartn_z_esd", aname="_cartn_z_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","int",lazy=False)(pname="chemical_conn_number", aname="_chemical_conn_number", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="constraints", aname="_constraints", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="details", aname="_details", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="disorder_assembly", aname="_disorder_assembly", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="disorder_group", aname="_disorder_group", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="footnote_id", aname="_footnote_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="fract_x", aname="_fract_x", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="fract_x_esd", aname="_fract_x_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="fract_y", aname="_fract_y", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="fract_y_esd", aname="_fract_y_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="fract_z", aname="_fract_z", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="fract_z_esd", aname="_fract_z_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="group_PDB", aname="_group_PDB", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="id_", aname="_id_", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="label_alt_id", aname="_label_alt_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="label_asym_id", aname="_label_asym_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="label_atom_id", aname="_label_atom_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="label_comp_id", aname="_label_comp_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="label_entity_id", aname="_label_entity_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","int",lazy=False)(pname="label_seq_id", aname="_label_seq_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="occupancy", aname="_occupancy", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="occupancy_esd", aname="_occupancy_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="pdbx_PDB_atom_name", aname="_pdbx_PDB_atom_name", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="pdbx_PDB_ins_code", aname="_pdbx_PDB_ins_code", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="pdbx_PDB_model_num", aname="_pdbx_PDB_model_num", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="pdbx_PDB_residue_name", aname="_pdbx_PDB_residue_name", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="pdbx_PDB_residue_no", aname="_pdbx_PDB_residue_no", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="pdbx_PDB_strand_id", aname="_pdbx_PDB_strand_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="pdbx_auth_alt_id", aname="_pdbx_auth_alt_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="pdbx_auth_atom_name", aname="_pdbx_auth_atom_name", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="refinement_flags", aname="_refinement_flags", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="refinement_flags_adp", aname="_refinement_flags_adp", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="refinement_flags_occupancy", aname="_refinement_flags_occupancy", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="refinement_flags_posn", aname="_refinement_flags_posn", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="restraints", aname="_restraints", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","int",lazy=False)(pname="symmetry_multiplicity", aname="_symmetry_multiplicity", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="thermal_displace_type", aname="_thermal_displace_type", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="type_symbol", aname="_type_symbol", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="u_equiv_geom_mean", aname="_u_equiv_geom_mean", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="u_equiv_geom_mean_esd", aname="_u_equiv_geom_mean_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="u_iso_or_equiv", aname="_u_iso_or_equiv", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","float",lazy=False)(pname="u_iso_or_equiv_esd", aname="_u_iso_or_equiv_esd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="wyckoff_symbol", aname="_wyckoff_symbol", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","long",lazy=False)(pname="obj_id", aname="_obj_id", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded"))]
            self.attribute_typecode_dict = attributes or {}
            if extend: TClist += ofwhat
            if restrict: TClist = ofwhat
            ZSI.TCcompound.ComplexType.__init__(self, None, TClist, pname=pname, inorder=0, **kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self._adp_type = None
                    self._aniso_B11 = None
                    self._aniso_B11_esd = None
                    self._aniso_B12 = None
                    self._aniso_B12_esd = None
                    self._aniso_B13 = None
                    self._aniso_B13_esd = None
                    self._aniso_B22 = None
                    self._aniso_B22_esd = None
                    self._aniso_B23 = None
                    self._aniso_B23_esd = None
                    self._aniso_B33 = None
                    self._aniso_B33_esd = None
                    self._aniso_U11 = None
                    self._aniso_U11_esd = None
                    self._aniso_U12 = None
                    self._aniso_U12_esd = None
                    self._aniso_U13 = None
                    self._aniso_U13_esd = None
                    self._aniso_U22 = None
                    self._aniso_U22_esd = None
                    self._aniso_U23 = None
                    self._aniso_U23_esd = None
                    self._aniso_U33 = None
                    self._aniso_U33_esd = None
                    self._aniso_ratio = None
                    self._attached_hydrogens = None
                    self._auth_asym_id = None
                    self._auth_atom_id = None
                    self._auth_comp_id = None
                    self._auth_seq_id = None
                    self._b_equiv_geom_mean = None
                    self._b_equiv_geom_mean_esd = None
                    self._b_iso_or_equiv = None
                    self._b_iso_or_equiv_esd = None
                    self._calc_attached_atom = None
                    self._calc_flag = None
                    self._cartn_x = None
                    self._cartn_x_esd = None
                    self._cartn_y = None
                    self._cartn_y_esd = None
                    self._cartn_z = None
                    self._cartn_z_esd = None
                    self._chemical_conn_number = None
                    self._constraints = None
                    self._details = None
                    self._disorder_assembly = None
                    self._disorder_group = None
                    self._footnote_id = None
                    self._fract_x = None
                    self._fract_x_esd = None
                    self._fract_y = None
                    self._fract_y_esd = None
                    self._fract_z = None
                    self._fract_z_esd = None
                    self._group_PDB = None
                    self._id_ = None
                    self._label_alt_id = None
                    self._label_asym_id = None
                    self._label_atom_id = None
                    self._label_comp_id = None
                    self._label_entity_id = None
                    self._label_seq_id = None
                    self._occupancy = None
                    self._occupancy_esd = None
                    self._pdbx_PDB_atom_name = None
                    self._pdbx_PDB_ins_code = None
                    self._pdbx_PDB_model_num = None
                    self._pdbx_PDB_residue_name = None
                    self._pdbx_PDB_residue_no = None
                    self._pdbx_PDB_strand_id = None
                    self._pdbx_auth_alt_id = None
                    self._pdbx_auth_atom_name = None
                    self._refinement_flags = None
                    self._refinement_flags_adp = None
                    self._refinement_flags_occupancy = None
                    self._refinement_flags_posn = None
                    self._restraints = None
                    self._symmetry_multiplicity = None
                    self._thermal_displace_type = None
                    self._type_symbol = None
                    self._u_equiv_geom_mean = None
                    self._u_equiv_geom_mean_esd = None
                    self._u_iso_or_equiv = None
                    self._u_iso_or_equiv_esd = None
                    self._wyckoff_symbol = None
                    self._obj_id = None
                    return
            Holder.__name__ = "AtomCoords_Holder"
            self.pyclass = Holder

    class Atom_siteWS_Def(TypeDefinition):
        #complexType/complexContent extension
        schema = "webservices.pdb.org"
        type = (schema, "Atom_siteWS")
        def __init__(self, pname, ofwhat=(), extend=False, restrict=False, attributes=None, **kw):
            ns = ns0.Atom_siteWS_Def.schema
            TClist = []
            attributes = self.attribute_typecode_dict = attributes or {}
            if extend: TClist += ofwhat
            if restrict: TClist = ofwhat
            if ns0.AtomCoords_Def not in ns0.Atom_siteWS_Def.__bases__:
                bases = list(ns0.Atom_siteWS_Def.__bases__)
                bases.insert(0, ns0.AtomCoords_Def)
                ns0.Atom_siteWS_Def.__bases__ = tuple(bases)

            ns0.AtomCoords_Def.__init__(self, pname, ofwhat=TClist, extend=True, attributes=attributes, **kw)

    class ArrayOfAtom_siteWS_Def(ZSI.TC.Array, TypeDefinition):
        #complexType/complexContent base="SOAP-ENC:Array"
        schema = "webservices.pdb.org"
        type = (schema, "ArrayOfAtom_siteWS")
        def __init__(self, pname, ofwhat=(), extend=False, restrict=False, attributes=None, **kw):
            ofwhat = ns0.Atom_siteWS_Def(None, typed=False)
            atype = (u'webservices.pdb.org', u'Atom_siteWS[]')
            ZSI.TCcompound.Array.__init__(self, atype, ofwhat, pname=pname, childnames='item', **kw)

    class Struct_sheet_rangeWS_Def(ZSI.TCcompound.ComplexType, TypeDefinition):
        schema = "webservices.pdb.org"
        type = (schema, "Struct_sheet_rangeWS")
        def __init__(self, pname, ofwhat=(), attributes=None, extend=False, restrict=False, **kw):
            ns = ns0.Struct_sheet_rangeWS_Def.schema
            TClist = []
            self.attribute_typecode_dict = attributes or {}
            if extend: TClist += ofwhat
            if restrict: TClist = ofwhat
            ZSI.TCcompound.ComplexType.__init__(self, None, TClist, pname=pname, inorder=0, **kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    return
            Holder.__name__ = "Struct_sheet_rangeWS_Holder"
            self.pyclass = Holder

    class ArrayOfStruct_sheet_rangeWS_Def(ZSI.TC.Array, TypeDefinition):
        #complexType/complexContent base="SOAP-ENC:Array"
        schema = "webservices.pdb.org"
        type = (schema, "ArrayOfStruct_sheet_rangeWS")
        def __init__(self, pname, ofwhat=(), extend=False, restrict=False, attributes=None, **kw):
            ofwhat = ns0.Struct_sheet_rangeWS_Def(None, typed=False)
            atype = (u'webservices.pdb.org', u'Struct_sheet_rangeWS[]')
            ZSI.TCcompound.Array.__init__(self, atype, ofwhat, pname=pname, childnames='item', **kw)

    class Struct_confWS_Def(ZSI.TCcompound.ComplexType, TypeDefinition):
        schema = "webservices.pdb.org"
        type = (schema, "Struct_confWS")
        def __init__(self, pname, ofwhat=(), attributes=None, extend=False, restrict=False, **kw):
            ns = ns0.Struct_confWS_Def.schema
            TClist = []
            self.attribute_typecode_dict = attributes or {}
            if extend: TClist += ofwhat
            if restrict: TClist = ofwhat
            ZSI.TCcompound.ComplexType.__init__(self, None, TClist, pname=pname, inorder=0, **kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    return
            Holder.__name__ = "Struct_confWS_Holder"
            self.pyclass = Holder

    class ArrayOfStruct_confWS_Def(ZSI.TC.Array, TypeDefinition):
        #complexType/complexContent base="SOAP-ENC:Array"
        schema = "webservices.pdb.org"
        type = (schema, "ArrayOfStruct_confWS")
        def __init__(self, pname, ofwhat=(), extend=False, restrict=False, attributes=None, **kw):
            ofwhat = ns0.Struct_confWS_Def(None, typed=False)
            atype = (u'webservices.pdb.org', u'Struct_confWS[]')
            ZSI.TCcompound.Array.__init__(self, atype, ofwhat, pname=pname, childnames='item', **kw)

    class ArrayOf_soapenc_string_Def(ZSI.TC.Array, TypeDefinition):
        #complexType/complexContent base="SOAP-ENC:Array"
        schema = "webservices.pdb.org"
        type = (schema, "ArrayOf_soapenc_string")
        def __init__(self, pname, ofwhat=(), extend=False, restrict=False, attributes=None, **kw):
            ofwhat = ZSI.TC.String(None, typed=False)
            atype = (u'http://www.w3.org/2001/XMLSchema', u'string[]')
            ZSI.TCcompound.Array.__init__(self, atype, ofwhat, pname=pname, childnames='item', **kw)

    class SnpInfo_Def(ZSI.TCcompound.ComplexType, TypeDefinition):
        schema = "webservices.pdb.org"
        type = (schema, "SnpInfo")
        def __init__(self, pname, ofwhat=(), attributes=None, extend=False, restrict=False, **kw):
            ns = ns0.SnpInfo_Def.schema
            TClist = [GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="chainId", aname="_chainId", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="contigResidue", aname="_contigResidue", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","int",lazy=False)(pname="flgIdentical", aname="_flgIdentical", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="masterResidue", aname="_masterResidue", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","int",lazy=False)(pname="omimId", aname="_omimId", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="snpId", aname="_snpId", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="snpType", aname="_snpType", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","int",lazy=False)(pname="structAaPos", aname="_structAaPos", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="structId", aname="_structId", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="structResidue", aname="_structResidue", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded"))]
            self.attribute_typecode_dict = attributes or {}
            if extend: TClist += ofwhat
            if restrict: TClist = ofwhat
            ZSI.TCcompound.ComplexType.__init__(self, None, TClist, pname=pname, inorder=0, **kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self._chainId = None
                    self._contigResidue = None
                    self._flgIdentical = None
                    self._masterResidue = None
                    self._omimId = None
                    self._snpId = None
                    self._snpType = None
                    self._structAaPos = None
                    self._structId = None
                    self._structResidue = None
                    return
            Holder.__name__ = "SnpInfo_Holder"
            self.pyclass = Holder

    class ArrayOfSnpInfo_Def(ZSI.TC.Array, TypeDefinition):
        #complexType/complexContent base="SOAP-ENC:Array"
        schema = "webservices.pdb.org"
        type = (schema, "ArrayOfSnpInfo")
        def __init__(self, pname, ofwhat=(), extend=False, restrict=False, attributes=None, **kw):
            ofwhat = ns0.SnpInfo_Def(None, typed=False)
            atype = (u'webservices.pdb.org', u'SnpInfo[]')
            ZSI.TCcompound.Array.__init__(self, atype, ofwhat, pname=pname, childnames='item', **kw)

    class LigandInfo_Def(ZSI.TCcompound.ComplexType, TypeDefinition):
        schema = "webservices.pdb.org"
        type = (schema, "LigandInfo")
        def __init__(self, pname, ofwhat=(), attributes=None, extend=False, restrict=False, **kw):
            ns = ns0.LigandInfo_Def.schema
            TClist = [GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="structId", aname="_structId", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="ligandId", aname="_ligandId", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="ligandName", aname="_ligandName", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="formula", aname="_formula", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="smiles", aname="_smiles", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded"))]
            self.attribute_typecode_dict = attributes or {}
            if extend: TClist += ofwhat
            if restrict: TClist = ofwhat
            ZSI.TCcompound.ComplexType.__init__(self, None, TClist, pname=pname, inorder=0, **kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self._structId = None
                    self._ligandId = None
                    self._ligandName = None
                    self._formula = None
                    self._smiles = None
                    return
            Holder.__name__ = "LigandInfo_Holder"
            self.pyclass = Holder

    class ArrayOfLigandInfo_Def(ZSI.TC.Array, TypeDefinition):
        #complexType/complexContent base="SOAP-ENC:Array"
        schema = "webservices.pdb.org"
        type = (schema, "ArrayOfLigandInfo")
        def __init__(self, pname, ofwhat=(), extend=False, restrict=False, attributes=None, **kw):
            ofwhat = ns0.LigandInfo_Def(None, typed=False)
            atype = (u'webservices.pdb.org', u'LigandInfo[]')
            ZSI.TCcompound.Array.__init__(self, atype, ofwhat, pname=pname, childnames='item', **kw)

    class DomainFragmentWS_Def(ZSI.TCcompound.ComplexType, TypeDefinition):
        schema = "webservices.pdb.org"
        type = (schema, "DomainFragmentWS")
        def __init__(self, pname, ofwhat=(), attributes=None, extend=False, restrict=False, **kw):
            ns = ns0.DomainFragmentWS_Def.schema
            TClist = [GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="cifChainId", aname="_cifChainId", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","int",lazy=False)(pname="cifEnd", aname="_cifEnd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","int",lazy=False)(pname="cifStart", aname="_cifStart", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","int",lazy=False)(pname="domainFragmentNumber", aname="_domainFragmentNumber", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="methodChainId", aname="_methodChainId", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="methodDomainId", aname="_methodDomainId", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="methodDomainName", aname="_methodDomainName", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="methodEnd", aname="_methodEnd", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="methodStart", aname="_methodStart", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="pdbId", aname="_pdbId", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="predictionMethod", aname="_predictionMethod", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="predictionMethodVersion", aname="_predictionMethodVersion", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded")), GTD("http://schemas.xmlsoap.org/soap/encoding/","string",lazy=False)(pname="methodVersion", aname="_methodVersion", minOccurs=1, maxOccurs=1, nillable=True, typed=False, encoded=kw.get("encoded"))]
            self.attribute_typecode_dict = attributes or {}
            if extend: TClist += ofwhat
            if restrict: TClist = ofwhat
            ZSI.TCcompound.ComplexType.__init__(self, None, TClist, pname=pname, inorder=0, **kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self._cifChainId = None
                    self._cifEnd = None
                    self._cifStart = None
                    self._domainFragmentNumber = None
                    self._methodChainId = None
                    self._methodDomainId = None
                    self._methodDomainName = None
                    self._methodEnd = None
                    self._methodStart = None
                    self._pdbId = None
                    self._predictionMethod = None
                    self._predictionMethodVersion = None
                    self._methodVersion = None
                    return
            Holder.__name__ = "DomainFragmentWS_Holder"
            self.pyclass = Holder

    class ArrayOfDomainFragmentWS_Def(ZSI.TC.Array, TypeDefinition):
        #complexType/complexContent base="SOAP-ENC:Array"
        schema = "webservices.pdb.org"
        type = (schema, "ArrayOfDomainFragmentWS")
        def __init__(self, pname, ofwhat=(), extend=False, restrict=False, attributes=None, **kw):
            ofwhat = ns0.DomainFragmentWS_Def(None, typed=False)
            atype = (u'webservices.pdb.org', u'DomainFragmentWS[]')
            ZSI.TCcompound.Array.__init__(self, atype, ofwhat, pname=pname, childnames='item', **kw)

# end class ns0 (tns: webservices.pdb.org)
