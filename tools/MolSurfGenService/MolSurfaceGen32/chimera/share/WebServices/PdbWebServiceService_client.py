##################################################
# file: PdbWebServiceService_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /home/chimera/chimeraBuild_OSMESA/build/build/bin/wsdl2py pdbws.wsdl
# 
##################################################

from PdbWebServiceService_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI

# Locator
class PdbWebServiceServiceLocator:
    pdbws_address = "http://www.pdb.org/pdb/services/pdbws"
    def getpdbwsAddress(self):
        return PdbWebServiceServiceLocator.pdbws_address
    def getpdbws(self, url=None, **kw):
        return pdbwsSoapBindingSOAP(url or PdbWebServiceServiceLocator.pdbws_address, **kw)

# Methods
class pdbwsSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: getAnnotations
    def getAnnotations(self, request, **kw):
        if isinstance(request, getAnnotationsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getAnnotationsResponse.typecode.ofwhat, pyclass=getAnnotationsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getEntities
    def getEntities(self, request, **kw):
        if isinstance(request, getEntitiesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getEntitiesResponse.typecode.ofwhat, pyclass=getEntitiesResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: blastPDB
    def blastPDB(self, request, **kw):
        if isinstance(request, blastPDBRequest1) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=blastPDBResponse1.typecode.ofwhat, pyclass=blastPDBResponse1.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: blastPDB
    def blastPDB(self, request, **kw):
        if isinstance(request, blastPDBRequest1) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=blastPDBResponse1.typecode.ofwhat, pyclass=blastPDBResponse1.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getIdStatus
    def getIdStatus(self, request, **kw):
        if isinstance(request, getIdStatusRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getIdStatusResponse.typecode.ofwhat, pyclass=getIdStatusResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getAtomSite
    def getAtomSite(self, request, **kw):
        if isinstance(request, getAtomSiteRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getAtomSiteResponse.typecode.ofwhat, pyclass=getAtomSiteResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getAtomSites
    def getAtomSites(self, request, **kw):
        if isinstance(request, getAtomSitesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getAtomSitesResponse.typecode.ofwhat, pyclass=getAtomSitesResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getFirstStructSheetRange
    def getFirstStructSheetRange(self, request, **kw):
        if isinstance(request, getFirstStructSheetRangeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getFirstStructSheetRangeResponse.typecode.ofwhat, pyclass=getFirstStructSheetRangeResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getStructSheetRanges
    def getStructSheetRanges(self, request, **kw):
        if isinstance(request, getStructSheetRangesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getStructSheetRangesResponse.typecode.ofwhat, pyclass=getStructSheetRangesResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getFirstStructConf
    def getFirstStructConf(self, request, **kw):
        if isinstance(request, getFirstStructConfRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getFirstStructConfResponse.typecode.ofwhat, pyclass=getFirstStructConfResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getStructConfs
    def getStructConfs(self, request, **kw):
        if isinstance(request, getStructConfsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getStructConfsResponse.typecode.ofwhat, pyclass=getStructConfsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: fastaStructureIdQuery
    def fastaStructureIdQuery(self, request, **kw):
        if isinstance(request, fastaStructureIdQueryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=fastaStructureIdQueryResponse.typecode.ofwhat, pyclass=fastaStructureIdQueryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: fastaQuery
    def fastaQuery(self, request, **kw):
        if isinstance(request, fastaQueryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=fastaQueryResponse.typecode.ofwhat, pyclass=fastaQueryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: homologyReductionQuery
    def homologyReductionQuery(self, request, **kw):
        if isinstance(request, homologyReductionQueryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=homologyReductionQueryResponse.typecode.ofwhat, pyclass=homologyReductionQueryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: keywordQuery
    def keywordQuery(self, request, **kw):
        if isinstance(request, keywordQueryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=keywordQueryResponse.typecode.ofwhat, pyclass=keywordQueryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: pubmedAbstractQuery
    def pubmedAbstractQuery(self, request, **kw):
        if isinstance(request, pubmedAbstractQueryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=pubmedAbstractQueryResponse.typecode.ofwhat, pyclass=pubmedAbstractQueryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getSpaceGroupForStructure
    def getSpaceGroupForStructure(self, request, **kw):
        if isinstance(request, getSpaceGroupForStructureRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getSpaceGroupForStructureResponse.typecode.ofwhat, pyclass=getSpaceGroupForStructureResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getPubmedIdForAllStructures
    def getPubmedIdForAllStructures(self, request, **kw):
        if isinstance(request, getPubmedIdForAllStructuresRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getPubmedIdForAllStructuresResponse.typecode.ofwhat, pyclass=getPubmedIdForAllStructuresResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getStructureGenomicsPdbIds
    def getStructureGenomicsPdbIds(self, request, **kw):
        if isinstance(request, getStructureGenomicsPdbIdsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getStructureGenomicsPdbIdsResponse.typecode.ofwhat, pyclass=getStructureGenomicsPdbIdsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getSwissProtIds
    def getSwissProtIds(self, request, **kw):
        if isinstance(request, getSwissProtIdsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getSwissProtIdsResponse.typecode.ofwhat, pyclass=getSwissProtIdsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getGenomeDetails
    def getGenomeDetails(self, request, **kw):
        if isinstance(request, getGenomeDetailsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getGenomeDetailsResponse.typecode.ofwhat, pyclass=getGenomeDetailsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getPubmedIdForStructure
    def getPubmedIdForStructure(self, request, **kw):
        if isinstance(request, getPubmedIdForStructureRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getPubmedIdForStructureResponse.typecode.ofwhat, pyclass=getPubmedIdForStructureResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getSequenceForStructureAndChain
    def getSequenceForStructureAndChain(self, request, **kw):
        if isinstance(request, getSequenceForStructureAndChainRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getSequenceForStructureAndChainResponse.typecode.ofwhat, pyclass=getSequenceForStructureAndChainResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getPrimaryCitationTitle
    def getPrimaryCitationTitle(self, request, **kw):
        if isinstance(request, getPrimaryCitationTitleRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getPrimaryCitationTitleResponse.typecode.ofwhat, pyclass=getPrimaryCitationTitleResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: isStructureIdObsolete
    def isStructureIdObsolete(self, request, **kw):
        if isinstance(request, isStructureIdObsoleteRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=isStructureIdObsoleteResponse.typecode.ofwhat, pyclass=isStructureIdObsoleteResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getSnpInfo
    def getSnpInfo(self, request, **kw):
        if isinstance(request, getSnpInfoRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getSnpInfoResponse.typecode.ofwhat, pyclass=getSnpInfoResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getLigandInfo
    def getLigandInfo(self, request, **kw):
        if isinstance(request, getLigandInfoRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getLigandInfoResponse.typecode.ofwhat, pyclass=getLigandInfoResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: smilesQuery
    def smilesQuery(self, request, **kw):
        if isinstance(request, smilesQueryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=smilesQueryResponse.typecode.ofwhat, pyclass=smilesQueryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getSnps
    def getSnps(self, request, **kw):
        if isinstance(request, getSnpsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getSnpsResponse.typecode.ofwhat, pyclass=getSnpsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getReleaseDates
    def getReleaseDates(self, request, **kw):
        if isinstance(request, getReleaseDatesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getReleaseDatesResponse.typecode.ofwhat, pyclass=getReleaseDatesResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getEcNumsForStructures
    def getEcNumsForStructures(self, request, **kw):
        if isinstance(request, getEcNumsForStructuresRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getEcNumsForStructuresResponse.typecode.ofwhat, pyclass=getEcNumsForStructuresResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getEcNums
    def getEcNums(self, request, **kw):
        if isinstance(request, getEcNumsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getEcNumsResponse.typecode.ofwhat, pyclass=getEcNumsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getCifChain
    def getCifChain(self, request, **kw):
        if isinstance(request, getCifChainRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getCifChainResponse.typecode.ofwhat, pyclass=getCifChainResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getCifResidue
    def getCifResidue(self, request, **kw):
        if isinstance(request, getCifResidueRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getCifResidueResponse.typecode.ofwhat, pyclass=getCifResidueResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getChains
    def getChains(self, request, **kw):
        if isinstance(request, getChainsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getChainsResponse.typecode.ofwhat, pyclass=getChainsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getCifChains
    def getCifChains(self, request, **kw):
        if isinstance(request, getCifChainsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getCifChainsResponse.typecode.ofwhat, pyclass=getCifChainsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getChainLength
    def getChainLength(self, request, **kw):
        if isinstance(request, getChainLengthRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getChainLengthResponse.typecode.ofwhat, pyclass=getChainLengthResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getCifChainLength
    def getCifChainLength(self, request, **kw):
        if isinstance(request, getCifChainLengthRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getCifChainLengthResponse.typecode.ofwhat, pyclass=getCifChainLengthResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getKabschSander
    def getKabschSander(self, request, **kw):
        if isinstance(request, getKabschSanderRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getKabschSanderResponse.typecode.ofwhat, pyclass=getKabschSanderResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getDisorder
    def getDisorder(self, request, **kw):
        if isinstance(request, getDisorderRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getDisorderResponse.typecode.ofwhat, pyclass=getDisorderResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getDbRefIds
    def getDbRefIds(self, request, **kw):
        if isinstance(request, getDbRefIdsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getDbRefIdsResponse.typecode.ofwhat, pyclass=getDbRefIdsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getPdbChain
    def getPdbChain(self, request, **kw):
        if isinstance(request, getPdbChainRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getPdbChainResponse.typecode.ofwhat, pyclass=getPdbChainResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: runXmlQuery
    def runXmlQuery(self, request, **kw):
        if isinstance(request, runXmlQueryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=runXmlQueryResponse.typecode.ofwhat, pyclass=runXmlQueryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getCurrentPdbIds
    def getCurrentPdbIds(self, request, **kw):
        if isinstance(request, getCurrentPdbIdsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getCurrentPdbIdsResponse.typecode.ofwhat, pyclass=getCurrentPdbIdsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getObsoletePdbIds
    def getObsoletePdbIds(self, request, **kw):
        if isinstance(request, getObsoletePdbIdsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getObsoletePdbIdsResponse.typecode.ofwhat, pyclass=getObsoletePdbIdsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: getDomainFragments
    def getDomainFragments(self, request, **kw):
        if isinstance(request, getDomainFragmentsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=getDomainFragmentsResponse.typecode.ofwhat, pyclass=getDomainFragmentsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: blastQueryXml
    def blastQueryXml(self, request, **kw):
        if isinstance(request, blastQueryXmlRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=blastQueryXmlResponse.typecode.ofwhat, pyclass=blastQueryXmlResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: blastStructureIdQueryXml
    def blastStructureIdQueryXml(self, request, **kw):
        if isinstance(request, blastStructureIdQueryXmlRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=blastStructureIdQueryXmlResponse.typecode.ofwhat, pyclass=blastStructureIdQueryXmlResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

class getAnnotationsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getAnnotationsRequest.typecode = Struct(pname=("webservices.pdb.org","getAnnotations"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getAnnotationsRequest, encoded="webservices.pdb.org")

class getAnnotationsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getAnnotationsReturn -- part getAnnotationsReturn
        """
        self._getAnnotationsReturn =  kw.get("getAnnotationsReturn")
getAnnotationsResponse.typecode = Struct(pname=("webservices.pdb.org","getAnnotationsResponse"), ofwhat=[ZSI.TC.String(pname="getAnnotationsReturn", aname="_getAnnotationsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getAnnotationsResponse, encoded="webservices.pdb.org")

class getEntitiesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getEntitiesRequest.typecode = Struct(pname=("webservices.pdb.org","getEntities"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getEntitiesRequest, encoded="webservices.pdb.org")

class getEntitiesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getEntitiesReturn -- part getEntitiesReturn
        """
        self._getEntitiesReturn =  kw.get("getEntitiesReturn")
getEntitiesResponse.typecode = Struct(pname=("webservices.pdb.org","getEntitiesResponse"), ofwhat=[ns0.ArrayOf_xsd_int_Def(pname="getEntitiesReturn", aname="_getEntitiesReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getEntitiesResponse, encoded="webservices.pdb.org")

class blastPDBRequest1:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        in2 -- part in2
        in3 -- part in3
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
        self._in2 =  kw.get("in2")
        self._in3 =  kw.get("in3")
blastPDBRequest1.typecode = Struct(pname=("webservices.pdb.org","blastPDB"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPdouble(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in2", aname="_in2", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in3", aname="_in3", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=blastPDBRequest1, encoded="webservices.pdb.org")

class blastPDBResponse1:
    def __init__(self, **kw):
        """Keyword parameters:
        blastPDBReturn -- part blastPDBReturn
        """
        self._blastPDBReturn =  kw.get("blastPDBReturn")
blastPDBResponse1.typecode = Struct(pname=("webservices.pdb.org","blastPDBResponse"), ofwhat=[ZSI.TC.String(pname="blastPDBReturn", aname="_blastPDBReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=blastPDBResponse1, encoded="webservices.pdb.org")

class blastPDBRequest1:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        in2 -- part in2
        in3 -- part in3
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
        self._in2 =  kw.get("in2")
        self._in3 =  kw.get("in3")
blastPDBRequest1.typecode = Struct(pname=("webservices.pdb.org","blastPDB"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPdouble(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in2", aname="_in2", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in3", aname="_in3", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=blastPDBRequest1, encoded="webservices.pdb.org")

class blastPDBResponse1:
    def __init__(self, **kw):
        """Keyword parameters:
        blastPDBReturn -- part blastPDBReturn
        """
        self._blastPDBReturn =  kw.get("blastPDBReturn")
blastPDBResponse1.typecode = Struct(pname=("webservices.pdb.org","blastPDBResponse"), ofwhat=[ZSI.TC.String(pname="blastPDBReturn", aname="_blastPDBReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=blastPDBResponse1, encoded="webservices.pdb.org")

class getIdStatusRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getIdStatusRequest.typecode = Struct(pname=("webservices.pdb.org","getIdStatus"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getIdStatusRequest, encoded="webservices.pdb.org")

class getIdStatusResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getIdStatusReturn -- part getIdStatusReturn
        """
        self._getIdStatusReturn =  kw.get("getIdStatusReturn")
getIdStatusResponse.typecode = Struct(pname=("webservices.pdb.org","getIdStatusResponse"), ofwhat=[ZSI.TC.String(pname="getIdStatusReturn", aname="_getIdStatusReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getIdStatusResponse, encoded="webservices.pdb.org")

class getAtomSiteRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getAtomSiteRequest.typecode = Struct(pname=("webservices.pdb.org","getAtomSite"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getAtomSiteRequest, encoded="webservices.pdb.org")

class getAtomSiteResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getAtomSiteReturn -- part getAtomSiteReturn
        """
        self._getAtomSiteReturn =  kw.get("getAtomSiteReturn")
getAtomSiteResponse.typecode = Struct(pname=("webservices.pdb.org","getAtomSiteResponse"), ofwhat=[ns0.Atom_siteWS_Def(pname="getAtomSiteReturn", aname="_getAtomSiteReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getAtomSiteResponse, encoded="webservices.pdb.org")

class getAtomSitesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getAtomSitesRequest.typecode = Struct(pname=("webservices.pdb.org","getAtomSites"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getAtomSitesRequest, encoded="webservices.pdb.org")

class getAtomSitesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getAtomSitesReturn -- part getAtomSitesReturn
        """
        self._getAtomSitesReturn =  kw.get("getAtomSitesReturn")
getAtomSitesResponse.typecode = Struct(pname=("webservices.pdb.org","getAtomSitesResponse"), ofwhat=[ns0.ArrayOfAtom_siteWS_Def(pname="getAtomSitesReturn", aname="_getAtomSitesReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getAtomSitesResponse, encoded="webservices.pdb.org")

class getFirstStructSheetRangeRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getFirstStructSheetRangeRequest.typecode = Struct(pname=("webservices.pdb.org","getFirstStructSheetRange"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getFirstStructSheetRangeRequest, encoded="webservices.pdb.org")

class getFirstStructSheetRangeResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getFirstStructSheetRangeReturn -- part getFirstStructSheetRangeReturn
        """
        self._getFirstStructSheetRangeReturn =  kw.get("getFirstStructSheetRangeReturn")
getFirstStructSheetRangeResponse.typecode = Struct(pname=("webservices.pdb.org","getFirstStructSheetRangeResponse"), ofwhat=[ns0.Struct_sheet_rangeWS_Def(pname="getFirstStructSheetRangeReturn", aname="_getFirstStructSheetRangeReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getFirstStructSheetRangeResponse, encoded="webservices.pdb.org")

class getStructSheetRangesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getStructSheetRangesRequest.typecode = Struct(pname=("webservices.pdb.org","getStructSheetRanges"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getStructSheetRangesRequest, encoded="webservices.pdb.org")

class getStructSheetRangesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getStructSheetRangesReturn -- part getStructSheetRangesReturn
        """
        self._getStructSheetRangesReturn =  kw.get("getStructSheetRangesReturn")
getStructSheetRangesResponse.typecode = Struct(pname=("webservices.pdb.org","getStructSheetRangesResponse"), ofwhat=[ns0.ArrayOfStruct_sheet_rangeWS_Def(pname="getStructSheetRangesReturn", aname="_getStructSheetRangesReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getStructSheetRangesResponse, encoded="webservices.pdb.org")

class getFirstStructConfRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getFirstStructConfRequest.typecode = Struct(pname=("webservices.pdb.org","getFirstStructConf"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getFirstStructConfRequest, encoded="webservices.pdb.org")

class getFirstStructConfResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getFirstStructConfReturn -- part getFirstStructConfReturn
        """
        self._getFirstStructConfReturn =  kw.get("getFirstStructConfReturn")
getFirstStructConfResponse.typecode = Struct(pname=("webservices.pdb.org","getFirstStructConfResponse"), ofwhat=[ns0.Struct_confWS_Def(pname="getFirstStructConfReturn", aname="_getFirstStructConfReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getFirstStructConfResponse, encoded="webservices.pdb.org")

class getStructConfsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getStructConfsRequest.typecode = Struct(pname=("webservices.pdb.org","getStructConfs"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getStructConfsRequest, encoded="webservices.pdb.org")

class getStructConfsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getStructConfsReturn -- part getStructConfsReturn
        """
        self._getStructConfsReturn =  kw.get("getStructConfsReturn")
getStructConfsResponse.typecode = Struct(pname=("webservices.pdb.org","getStructConfsResponse"), ofwhat=[ns0.ArrayOfStruct_confWS_Def(pname="getStructConfsReturn", aname="_getStructConfsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getStructConfsResponse, encoded="webservices.pdb.org")

class fastaStructureIdQueryRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        in2 -- part in2
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
        self._in2 =  kw.get("in2")
fastaStructureIdQueryRequest.typecode = Struct(pname=("webservices.pdb.org","fastaStructureIdQuery"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPdouble(pname="in2", aname="_in2", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=fastaStructureIdQueryRequest, encoded="webservices.pdb.org")

class fastaStructureIdQueryResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        fastaStructureIdQueryReturn -- part fastaStructureIdQueryReturn
        """
        self._fastaStructureIdQueryReturn =  kw.get("fastaStructureIdQueryReturn")
fastaStructureIdQueryResponse.typecode = Struct(pname=("webservices.pdb.org","fastaStructureIdQueryResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="fastaStructureIdQueryReturn", aname="_fastaStructureIdQueryReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=fastaStructureIdQueryResponse, encoded="webservices.pdb.org")

class fastaQueryRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
fastaQueryRequest.typecode = Struct(pname=("webservices.pdb.org","fastaQuery"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPdouble(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=fastaQueryRequest, encoded="webservices.pdb.org")

class fastaQueryResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        fastaQueryReturn -- part fastaQueryReturn
        """
        self._fastaQueryReturn =  kw.get("fastaQueryReturn")
fastaQueryResponse.typecode = Struct(pname=("webservices.pdb.org","fastaQueryResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="fastaQueryReturn", aname="_fastaQueryReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=fastaQueryResponse, encoded="webservices.pdb.org")

class homologyReductionQueryRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
homologyReductionQueryRequest.typecode = Struct(pname=("webservices.pdb.org","homologyReductionQuery"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=homologyReductionQueryRequest, encoded="webservices.pdb.org")

class homologyReductionQueryResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        homologyReductionQueryReturn -- part homologyReductionQueryReturn
        """
        self._homologyReductionQueryReturn =  kw.get("homologyReductionQueryReturn")
homologyReductionQueryResponse.typecode = Struct(pname=("webservices.pdb.org","homologyReductionQueryResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="homologyReductionQueryReturn", aname="_homologyReductionQueryReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=homologyReductionQueryResponse, encoded="webservices.pdb.org")

class keywordQueryRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        in2 -- part in2
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
        self._in2 =  kw.get("in2")
keywordQueryRequest.typecode = Struct(pname=("webservices.pdb.org","keywordQuery"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Boolean(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.Boolean(pname="in2", aname="_in2", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=keywordQueryRequest, encoded="webservices.pdb.org")

class keywordQueryResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        keywordQueryReturn -- part keywordQueryReturn
        """
        self._keywordQueryReturn =  kw.get("keywordQueryReturn")
keywordQueryResponse.typecode = Struct(pname=("webservices.pdb.org","keywordQueryResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="keywordQueryReturn", aname="_keywordQueryReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=keywordQueryResponse, encoded="webservices.pdb.org")

class pubmedAbstractQueryRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
pubmedAbstractQueryRequest.typecode = Struct(pname=("webservices.pdb.org","pubmedAbstractQuery"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=pubmedAbstractQueryRequest, encoded="webservices.pdb.org")

class pubmedAbstractQueryResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        pubmedAbstractQueryReturn -- part pubmedAbstractQueryReturn
        """
        self._pubmedAbstractQueryReturn =  kw.get("pubmedAbstractQueryReturn")
pubmedAbstractQueryResponse.typecode = Struct(pname=("webservices.pdb.org","pubmedAbstractQueryResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="pubmedAbstractQueryReturn", aname="_pubmedAbstractQueryReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=pubmedAbstractQueryResponse, encoded="webservices.pdb.org")

class getSpaceGroupForStructureRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getSpaceGroupForStructureRequest.typecode = Struct(pname=("webservices.pdb.org","getSpaceGroupForStructure"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getSpaceGroupForStructureRequest, encoded="webservices.pdb.org")

class getSpaceGroupForStructureResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getSpaceGroupForStructureReturn -- part getSpaceGroupForStructureReturn
        """
        self._getSpaceGroupForStructureReturn =  kw.get("getSpaceGroupForStructureReturn")
getSpaceGroupForStructureResponse.typecode = Struct(pname=("webservices.pdb.org","getSpaceGroupForStructureResponse"), ofwhat=[ZSI.TC.String(pname="getSpaceGroupForStructureReturn", aname="_getSpaceGroupForStructureReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getSpaceGroupForStructureResponse, encoded="webservices.pdb.org")

class getPubmedIdForAllStructuresRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        """
getPubmedIdForAllStructuresRequest.typecode = Struct(pname=("webservices.pdb.org","getPubmedIdForAllStructures"), ofwhat=[], pyclass=getPubmedIdForAllStructuresRequest, encoded="webservices.pdb.org")

class getPubmedIdForAllStructuresResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getPubmedIdForAllStructuresReturn -- part getPubmedIdForAllStructuresReturn
        """
        self._getPubmedIdForAllStructuresReturn =  kw.get("getPubmedIdForAllStructuresReturn")
getPubmedIdForAllStructuresResponse.typecode = Struct(pname=("webservices.pdb.org","getPubmedIdForAllStructuresResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getPubmedIdForAllStructuresReturn", aname="_getPubmedIdForAllStructuresReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getPubmedIdForAllStructuresResponse, encoded="webservices.pdb.org")

class getStructureGenomicsPdbIdsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        """
getStructureGenomicsPdbIdsRequest.typecode = Struct(pname=("webservices.pdb.org","getStructureGenomicsPdbIds"), ofwhat=[], pyclass=getStructureGenomicsPdbIdsRequest, encoded="webservices.pdb.org")

class getStructureGenomicsPdbIdsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getStructureGenomicsPdbIdsReturn -- part getStructureGenomicsPdbIdsReturn
        """
        self._getStructureGenomicsPdbIdsReturn =  kw.get("getStructureGenomicsPdbIdsReturn")
getStructureGenomicsPdbIdsResponse.typecode = Struct(pname=("webservices.pdb.org","getStructureGenomicsPdbIdsResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getStructureGenomicsPdbIdsReturn", aname="_getStructureGenomicsPdbIdsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getStructureGenomicsPdbIdsResponse, encoded="webservices.pdb.org")

class getSwissProtIdsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        """
getSwissProtIdsRequest.typecode = Struct(pname=("webservices.pdb.org","getSwissProtIds"), ofwhat=[], pyclass=getSwissProtIdsRequest, encoded="webservices.pdb.org")

class getSwissProtIdsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getSwissProtIdsReturn -- part getSwissProtIdsReturn
        """
        self._getSwissProtIdsReturn =  kw.get("getSwissProtIdsReturn")
getSwissProtIdsResponse.typecode = Struct(pname=("webservices.pdb.org","getSwissProtIdsResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getSwissProtIdsReturn", aname="_getSwissProtIdsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getSwissProtIdsResponse, encoded="webservices.pdb.org")

class getGenomeDetailsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        """
getGenomeDetailsRequest.typecode = Struct(pname=("webservices.pdb.org","getGenomeDetails"), ofwhat=[], pyclass=getGenomeDetailsRequest, encoded="webservices.pdb.org")

class getGenomeDetailsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getGenomeDetailsReturn -- part getGenomeDetailsReturn
        """
        self._getGenomeDetailsReturn =  kw.get("getGenomeDetailsReturn")
getGenomeDetailsResponse.typecode = Struct(pname=("webservices.pdb.org","getGenomeDetailsResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getGenomeDetailsReturn", aname="_getGenomeDetailsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getGenomeDetailsResponse, encoded="webservices.pdb.org")

class getPubmedIdForStructureRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getPubmedIdForStructureRequest.typecode = Struct(pname=("webservices.pdb.org","getPubmedIdForStructure"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getPubmedIdForStructureRequest, encoded="webservices.pdb.org")

class getPubmedIdForStructureResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getPubmedIdForStructureReturn -- part getPubmedIdForStructureReturn
        """
        self._getPubmedIdForStructureReturn =  kw.get("getPubmedIdForStructureReturn")
getPubmedIdForStructureResponse.typecode = Struct(pname=("webservices.pdb.org","getPubmedIdForStructureResponse"), ofwhat=[ZSI.TC.String(pname="getPubmedIdForStructureReturn", aname="_getPubmedIdForStructureReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getPubmedIdForStructureResponse, encoded="webservices.pdb.org")

class getSequenceForStructureAndChainRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
getSequenceForStructureAndChainRequest.typecode = Struct(pname=("webservices.pdb.org","getSequenceForStructureAndChain"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getSequenceForStructureAndChainRequest, encoded="webservices.pdb.org")

class getSequenceForStructureAndChainResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getSequenceForStructureAndChainReturn -- part getSequenceForStructureAndChainReturn
        """
        self._getSequenceForStructureAndChainReturn =  kw.get("getSequenceForStructureAndChainReturn")
getSequenceForStructureAndChainResponse.typecode = Struct(pname=("webservices.pdb.org","getSequenceForStructureAndChainResponse"), ofwhat=[ZSI.TC.String(pname="getSequenceForStructureAndChainReturn", aname="_getSequenceForStructureAndChainReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getSequenceForStructureAndChainResponse, encoded="webservices.pdb.org")

class getPrimaryCitationTitleRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getPrimaryCitationTitleRequest.typecode = Struct(pname=("webservices.pdb.org","getPrimaryCitationTitle"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getPrimaryCitationTitleRequest, encoded="webservices.pdb.org")

class getPrimaryCitationTitleResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getPrimaryCitationTitleReturn -- part getPrimaryCitationTitleReturn
        """
        self._getPrimaryCitationTitleReturn =  kw.get("getPrimaryCitationTitleReturn")
getPrimaryCitationTitleResponse.typecode = Struct(pname=("webservices.pdb.org","getPrimaryCitationTitleResponse"), ofwhat=[ZSI.TC.String(pname="getPrimaryCitationTitleReturn", aname="_getPrimaryCitationTitleReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getPrimaryCitationTitleResponse, encoded="webservices.pdb.org")

class isStructureIdObsoleteRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
isStructureIdObsoleteRequest.typecode = Struct(pname=("webservices.pdb.org","isStructureIdObsolete"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=isStructureIdObsoleteRequest, encoded="webservices.pdb.org")

class isStructureIdObsoleteResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        isStructureIdObsoleteReturn -- part isStructureIdObsoleteReturn
        """
        self._isStructureIdObsoleteReturn =  kw.get("isStructureIdObsoleteReturn")
isStructureIdObsoleteResponse.typecode = Struct(pname=("webservices.pdb.org","isStructureIdObsoleteResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="isStructureIdObsoleteReturn", aname="_isStructureIdObsoleteReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=isStructureIdObsoleteResponse, encoded="webservices.pdb.org")

class getSnpInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getSnpInfoRequest.typecode = Struct(pname=("webservices.pdb.org","getSnpInfo"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getSnpInfoRequest, encoded="webservices.pdb.org")

class getSnpInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getSnpInfoReturn -- part getSnpInfoReturn
        """
        self._getSnpInfoReturn =  kw.get("getSnpInfoReturn")
getSnpInfoResponse.typecode = Struct(pname=("webservices.pdb.org","getSnpInfoResponse"), ofwhat=[ns0.ArrayOfSnpInfo_Def(pname="getSnpInfoReturn", aname="_getSnpInfoReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getSnpInfoResponse, encoded="webservices.pdb.org")

class getLigandInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getLigandInfoRequest.typecode = Struct(pname=("webservices.pdb.org","getLigandInfo"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getLigandInfoRequest, encoded="webservices.pdb.org")

class getLigandInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getLigandInfoReturn -- part getLigandInfoReturn
        """
        self._getLigandInfoReturn =  kw.get("getLigandInfoReturn")
getLigandInfoResponse.typecode = Struct(pname=("webservices.pdb.org","getLigandInfoResponse"), ofwhat=[ns0.ArrayOfLigandInfo_Def(pname="getLigandInfoReturn", aname="_getLigandInfoReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getLigandInfoResponse, encoded="webservices.pdb.org")

class smilesQueryRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        in2 -- part in2
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
        self._in2 =  kw.get("in2")
smilesQueryRequest.typecode = Struct(pname=("webservices.pdb.org","smilesQuery"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPfloat(pname="in2", aname="_in2", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=smilesQueryRequest, encoded="webservices.pdb.org")

class smilesQueryResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        smilesQueryReturn -- part smilesQueryReturn
        """
        self._smilesQueryReturn =  kw.get("smilesQueryReturn")
smilesQueryResponse.typecode = Struct(pname=("webservices.pdb.org","smilesQueryResponse"), ofwhat=[ns0.ArrayOfLigandInfo_Def(pname="smilesQueryReturn", aname="_smilesQueryReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=smilesQueryResponse, encoded="webservices.pdb.org")

class getSnpsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        """
getSnpsRequest.typecode = Struct(pname=("webservices.pdb.org","getSnps"), ofwhat=[], pyclass=getSnpsRequest, encoded="webservices.pdb.org")

class getSnpsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getSnpsReturn -- part getSnpsReturn
        """
        self._getSnpsReturn =  kw.get("getSnpsReturn")
getSnpsResponse.typecode = Struct(pname=("webservices.pdb.org","getSnpsResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getSnpsReturn", aname="_getSnpsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getSnpsResponse, encoded="webservices.pdb.org")

class getReleaseDatesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getReleaseDatesRequest.typecode = Struct(pname=("webservices.pdb.org","getReleaseDates"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getReleaseDatesRequest, encoded="webservices.pdb.org")

class getReleaseDatesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getReleaseDatesReturn -- part getReleaseDatesReturn
        """
        self._getReleaseDatesReturn =  kw.get("getReleaseDatesReturn")
getReleaseDatesResponse.typecode = Struct(pname=("webservices.pdb.org","getReleaseDatesResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getReleaseDatesReturn", aname="_getReleaseDatesReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getReleaseDatesResponse, encoded="webservices.pdb.org")

class getEcNumsForStructuresRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getEcNumsForStructuresRequest.typecode = Struct(pname=("webservices.pdb.org","getEcNumsForStructures"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getEcNumsForStructuresRequest, encoded="webservices.pdb.org")

class getEcNumsForStructuresResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getEcNumsForStructuresReturn -- part getEcNumsForStructuresReturn
        """
        self._getEcNumsForStructuresReturn =  kw.get("getEcNumsForStructuresReturn")
getEcNumsForStructuresResponse.typecode = Struct(pname=("webservices.pdb.org","getEcNumsForStructuresResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getEcNumsForStructuresReturn", aname="_getEcNumsForStructuresReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getEcNumsForStructuresResponse, encoded="webservices.pdb.org")

class getEcNumsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        """
getEcNumsRequest.typecode = Struct(pname=("webservices.pdb.org","getEcNums"), ofwhat=[], pyclass=getEcNumsRequest, encoded="webservices.pdb.org")

class getEcNumsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getEcNumsReturn -- part getEcNumsReturn
        """
        self._getEcNumsReturn =  kw.get("getEcNumsReturn")
getEcNumsResponse.typecode = Struct(pname=("webservices.pdb.org","getEcNumsResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getEcNumsReturn", aname="_getEcNumsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getEcNumsResponse, encoded="webservices.pdb.org")

class getCifChainRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
getCifChainRequest.typecode = Struct(pname=("webservices.pdb.org","getCifChain"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getCifChainRequest, encoded="webservices.pdb.org")

class getCifChainResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getCifChainReturn -- part getCifChainReturn
        """
        self._getCifChainReturn =  kw.get("getCifChainReturn")
getCifChainResponse.typecode = Struct(pname=("webservices.pdb.org","getCifChainResponse"), ofwhat=[ZSI.TC.String(pname="getCifChainReturn", aname="_getCifChainReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getCifChainResponse, encoded="webservices.pdb.org")

class getCifResidueRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        in2 -- part in2
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
        self._in2 =  kw.get("in2")
getCifResidueRequest.typecode = Struct(pname=("webservices.pdb.org","getCifResidue"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in2", aname="_in2", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getCifResidueRequest, encoded="webservices.pdb.org")

class getCifResidueResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getCifResidueReturn -- part getCifResidueReturn
        """
        self._getCifResidueReturn =  kw.get("getCifResidueReturn")
getCifResidueResponse.typecode = Struct(pname=("webservices.pdb.org","getCifResidueResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="getCifResidueReturn", aname="_getCifResidueReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getCifResidueResponse, encoded="webservices.pdb.org")

class getChainsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getChainsRequest.typecode = Struct(pname=("webservices.pdb.org","getChains"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getChainsRequest, encoded="webservices.pdb.org")

class getChainsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getChainsReturn -- part getChainsReturn
        """
        self._getChainsReturn =  kw.get("getChainsReturn")
getChainsResponse.typecode = Struct(pname=("webservices.pdb.org","getChainsResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getChainsReturn", aname="_getChainsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getChainsResponse, encoded="webservices.pdb.org")

class getCifChainsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
getCifChainsRequest.typecode = Struct(pname=("webservices.pdb.org","getCifChains"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getCifChainsRequest, encoded="webservices.pdb.org")

class getCifChainsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getCifChainsReturn -- part getCifChainsReturn
        """
        self._getCifChainsReturn =  kw.get("getCifChainsReturn")
getCifChainsResponse.typecode = Struct(pname=("webservices.pdb.org","getCifChainsResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getCifChainsReturn", aname="_getCifChainsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getCifChainsResponse, encoded="webservices.pdb.org")

class getChainLengthRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
getChainLengthRequest.typecode = Struct(pname=("webservices.pdb.org","getChainLength"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getChainLengthRequest, encoded="webservices.pdb.org")

class getChainLengthResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getChainLengthReturn -- part getChainLengthReturn
        """
        self._getChainLengthReturn =  kw.get("getChainLengthReturn")
getChainLengthResponse.typecode = Struct(pname=("webservices.pdb.org","getChainLengthResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="getChainLengthReturn", aname="_getChainLengthReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getChainLengthResponse, encoded="webservices.pdb.org")

class getCifChainLengthRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
getCifChainLengthRequest.typecode = Struct(pname=("webservices.pdb.org","getCifChainLength"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getCifChainLengthRequest, encoded="webservices.pdb.org")

class getCifChainLengthResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getCifChainLengthReturn -- part getCifChainLengthReturn
        """
        self._getCifChainLengthReturn =  kw.get("getCifChainLengthReturn")
getCifChainLengthResponse.typecode = Struct(pname=("webservices.pdb.org","getCifChainLengthResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="getCifChainLengthReturn", aname="_getCifChainLengthReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getCifChainLengthResponse, encoded="webservices.pdb.org")

class getKabschSanderRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
getKabschSanderRequest.typecode = Struct(pname=("webservices.pdb.org","getKabschSander"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getKabschSanderRequest, encoded="webservices.pdb.org")

class getKabschSanderResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getKabschSanderReturn -- part getKabschSanderReturn
        """
        self._getKabschSanderReturn =  kw.get("getKabschSanderReturn")
getKabschSanderResponse.typecode = Struct(pname=("webservices.pdb.org","getKabschSanderResponse"), ofwhat=[ZSI.TC.String(pname="getKabschSanderReturn", aname="_getKabschSanderReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getKabschSanderResponse, encoded="webservices.pdb.org")

class getDisorderRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
getDisorderRequest.typecode = Struct(pname=("webservices.pdb.org","getDisorder"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDisorderRequest, encoded="webservices.pdb.org")

class getDisorderResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getDisorderReturn -- part getDisorderReturn
        """
        self._getDisorderReturn =  kw.get("getDisorderReturn")
getDisorderResponse.typecode = Struct(pname=("webservices.pdb.org","getDisorderResponse"), ofwhat=[ZSI.TC.String(pname="getDisorderReturn", aname="_getDisorderReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDisorderResponse, encoded="webservices.pdb.org")

class getDbRefIdsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        in2 -- part in2
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
        self._in2 =  kw.get("in2")
getDbRefIdsRequest.typecode = Struct(pname=("webservices.pdb.org","getDbRefIds"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in2", aname="_in2", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDbRefIdsRequest, encoded="webservices.pdb.org")

class getDbRefIdsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getDbRefIdsReturn -- part getDbRefIdsReturn
        """
        self._getDbRefIdsReturn =  kw.get("getDbRefIdsReturn")
getDbRefIdsResponse.typecode = Struct(pname=("webservices.pdb.org","getDbRefIdsResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getDbRefIdsReturn", aname="_getDbRefIdsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDbRefIdsResponse, encoded="webservices.pdb.org")

class getPdbChainRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
getPdbChainRequest.typecode = Struct(pname=("webservices.pdb.org","getPdbChain"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getPdbChainRequest, encoded="webservices.pdb.org")

class getPdbChainResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getPdbChainReturn -- part getPdbChainReturn
        """
        self._getPdbChainReturn =  kw.get("getPdbChainReturn")
getPdbChainResponse.typecode = Struct(pname=("webservices.pdb.org","getPdbChainResponse"), ofwhat=[ZSI.TC.String(pname="getPdbChainReturn", aname="_getPdbChainReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getPdbChainResponse, encoded="webservices.pdb.org")

class runXmlQueryRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        """
        self._in0 =  kw.get("in0")
runXmlQueryRequest.typecode = Struct(pname=("webservices.pdb.org","runXmlQuery"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=runXmlQueryRequest, encoded="webservices.pdb.org")

class runXmlQueryResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        runXmlQueryReturn -- part runXmlQueryReturn
        """
        self._runXmlQueryReturn =  kw.get("runXmlQueryReturn")
runXmlQueryResponse.typecode = Struct(pname=("webservices.pdb.org","runXmlQueryResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="runXmlQueryReturn", aname="_runXmlQueryReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=runXmlQueryResponse, encoded="webservices.pdb.org")

class getCurrentPdbIdsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        """
getCurrentPdbIdsRequest.typecode = Struct(pname=("webservices.pdb.org","getCurrentPdbIds"), ofwhat=[], pyclass=getCurrentPdbIdsRequest, encoded="webservices.pdb.org")

class getCurrentPdbIdsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getCurrentPdbIdsReturn -- part getCurrentPdbIdsReturn
        """
        self._getCurrentPdbIdsReturn =  kw.get("getCurrentPdbIdsReturn")
getCurrentPdbIdsResponse.typecode = Struct(pname=("webservices.pdb.org","getCurrentPdbIdsResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getCurrentPdbIdsReturn", aname="_getCurrentPdbIdsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getCurrentPdbIdsResponse, encoded="webservices.pdb.org")

class getObsoletePdbIdsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        """
getObsoletePdbIdsRequest.typecode = Struct(pname=("webservices.pdb.org","getObsoletePdbIds"), ofwhat=[], pyclass=getObsoletePdbIdsRequest, encoded="webservices.pdb.org")

class getObsoletePdbIdsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getObsoletePdbIdsReturn -- part getObsoletePdbIdsReturn
        """
        self._getObsoletePdbIdsReturn =  kw.get("getObsoletePdbIdsReturn")
getObsoletePdbIdsResponse.typecode = Struct(pname=("webservices.pdb.org","getObsoletePdbIdsResponse"), ofwhat=[ns0.ArrayOf_soapenc_string_Def(pname="getObsoletePdbIdsReturn", aname="_getObsoletePdbIdsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getObsoletePdbIdsResponse, encoded="webservices.pdb.org")

class getDomainFragmentsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        in2 -- part in2
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
        self._in2 =  kw.get("in2")
getDomainFragmentsRequest.typecode = Struct(pname=("webservices.pdb.org","getDomainFragments"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in2", aname="_in2", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDomainFragmentsRequest, encoded="webservices.pdb.org")

class getDomainFragmentsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        getDomainFragmentsReturn -- part getDomainFragmentsReturn
        """
        self._getDomainFragmentsReturn =  kw.get("getDomainFragmentsReturn")
getDomainFragmentsResponse.typecode = Struct(pname=("webservices.pdb.org","getDomainFragmentsResponse"), ofwhat=[ns0.ArrayOfDomainFragmentWS_Def(pname="getDomainFragmentsReturn", aname="_getDomainFragmentsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=getDomainFragmentsResponse, encoded="webservices.pdb.org")

class blastQueryXmlRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
blastQueryXmlRequest.typecode = Struct(pname=("webservices.pdb.org","blastQueryXml"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPdouble(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=blastQueryXmlRequest, encoded="webservices.pdb.org")

class blastQueryXmlResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        blastQueryXmlReturn -- part blastQueryXmlReturn
        """
        self._blastQueryXmlReturn =  kw.get("blastQueryXmlReturn")
blastQueryXmlResponse.typecode = Struct(pname=("webservices.pdb.org","blastQueryXmlResponse"), ofwhat=[ZSI.TC.String(pname="blastQueryXmlReturn", aname="_blastQueryXmlReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=blastQueryXmlResponse, encoded="webservices.pdb.org")

class blastStructureIdQueryXmlRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        in0 -- part in0
        in1 -- part in1
        in2 -- part in2
        """
        self._in0 =  kw.get("in0")
        self._in1 =  kw.get("in1")
        self._in2 =  kw.get("in2")
blastStructureIdQueryXmlRequest.typecode = Struct(pname=("webservices.pdb.org","blastStructureIdQueryXml"), ofwhat=[ZSI.TC.String(pname="in0", aname="_in0", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="in1", aname="_in1", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.FPdouble(pname="in2", aname="_in2", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=blastStructureIdQueryXmlRequest, encoded="webservices.pdb.org")

class blastStructureIdQueryXmlResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        blastStructureIdQueryXmlReturn -- part blastStructureIdQueryXmlReturn
        """
        self._blastStructureIdQueryXmlReturn =  kw.get("blastStructureIdQueryXmlReturn")
blastStructureIdQueryXmlResponse.typecode = Struct(pname=("webservices.pdb.org","blastStructureIdQueryXmlResponse"), ofwhat=[ZSI.TC.String(pname="blastStructureIdQueryXmlReturn", aname="_blastStructureIdQueryXmlReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=blastStructureIdQueryXmlResponse, encoded="webservices.pdb.org")
